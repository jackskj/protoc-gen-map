// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: examples/query.proto

package examples

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Section int32

const (
	Section_cooking      Section = 0
	Section_painting     Section = 1
	Section_woodworking  Section = 2
	Section_snowboarding Section = 3
)

// Enum value maps for Section.
var (
	Section_name = map[int32]string{
		0: "cooking",
		1: "painting",
		2: "woodworking",
		3: "snowboarding",
	}
	Section_value = map[string]int32{
		"cooking":      0,
		"painting":     1,
		"woodworking":  2,
		"snowboarding": 3,
	}
)

func (x Section) Enum() *Section {
	p := new(Section)
	*p = x
	return p
}

func (x Section) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Section) Descriptor() protoreflect.EnumDescriptor {
	return file_examples_query_proto_enumTypes[0].Descriptor()
}

func (Section) Type() protoreflect.EnumType {
	return &file_examples_query_proto_enumTypes[0]
}

func (x Section) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Section.Descriptor instead.
func (Section) EnumDescriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{0}
}

type BlogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId uint32 `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *BlogRequest) Reset() {
	*x = BlogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogRequest) ProtoMessage() {}

func (x *BlogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogRequest.ProtoReflect.Descriptor instead.
func (*BlogRequest) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{0}
}

func (x *BlogRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlogRequest) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type BlogIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Titles []string `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *BlogIdsRequest) Reset() {
	*x = BlogIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogIdsRequest) ProtoMessage() {}

func (x *BlogIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogIdsRequest.ProtoReflect.Descriptor instead.
func (*BlogIdsRequest) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{1}
}

func (x *BlogIdsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BlogIdsRequest) GetTitles() []string {
	if x != nil {
		return x.Titles
	}
	return nil
}

type BlogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AuthorId string `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
}

func (x *BlogResponse) Reset() {
	*x = BlogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlogResponse) ProtoMessage() {}

func (x *BlogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlogResponse.ProtoReflect.Descriptor instead.
func (*BlogResponse) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{2}
}

func (x *BlogResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlogResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BlogResponse) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

type DetailedBlogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlogId    uint32  `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	BlogTitle string  `protobuf:"bytes,2,opt,name=blog_title,json=blogTitle,proto3" json:"blog_title,omitempty"`
	Author    *Author `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Posts     []*Post `protobuf:"bytes,4,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *DetailedBlogResponse) Reset() {
	*x = DetailedBlogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedBlogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedBlogResponse) ProtoMessage() {}

func (x *DetailedBlogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedBlogResponse.ProtoReflect.Descriptor instead.
func (*DetailedBlogResponse) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{3}
}

func (x *DetailedBlogResponse) GetBlogId() uint32 {
	if x != nil {
		return x.BlogId
	}
	return 0
}

func (x *DetailedBlogResponse) GetBlogTitle() string {
	if x != nil {
		return x.BlogTitle
	}
	return ""
}

func (x *DetailedBlogResponse) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *DetailedBlogResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorId               uint32  `protobuf:"varint,1,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorUsername         string  `protobuf:"bytes,2,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	AuthorPassword         string  `protobuf:"bytes,3,opt,name=author_password,json=authorPassword,proto3" json:"author_password,omitempty"`
	AuthorEmail            string  `protobuf:"bytes,4,opt,name=author_email,json=authorEmail,proto3" json:"author_email,omitempty"`
	AuthorBio              string  `protobuf:"bytes,5,opt,name=author_bio,json=authorBio,proto3" json:"author_bio,omitempty"`
	AuthorFavouriteSection Section `protobuf:"varint,6,opt,name=author_favourite_section,json=authorFavouriteSection,proto3,enum=examples.Section" json:"author_favourite_section,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{4}
}

func (x *Author) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Author) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

func (x *Author) GetAuthorPassword() string {
	if x != nil {
		return x.AuthorPassword
	}
	return ""
}

func (x *Author) GetAuthorEmail() string {
	if x != nil {
		return x.AuthorEmail
	}
	return ""
}

func (x *Author) GetAuthorBio() string {
	if x != nil {
		return x.AuthorBio
	}
	return ""
}

func (x *Author) GetAuthorFavouriteSection() Section {
	if x != nil {
		return x.AuthorFavouriteSection
	}
	return Section_cooking
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId        uint32               `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PostBlogId    uint32               `protobuf:"varint,2,opt,name=post_blog_id,json=postBlogId,proto3" json:"post_blog_id,omitempty"`
	PostAuthorId  uint32               `protobuf:"varint,3,opt,name=post_author_id,json=postAuthorId,proto3" json:"post_author_id,omitempty"`
	PostCreatedOn *timestamp.Timestamp `protobuf:"bytes,4,opt,name=post_created_on,json=postCreatedOn,proto3" json:"post_created_on,omitempty"`
	PostSection   Section              `protobuf:"varint,5,opt,name=post_section,json=postSection,proto3,enum=examples.Section" json:"post_section,omitempty"`
	PostSubject   string               `protobuf:"bytes,6,opt,name=post_subject,json=postSubject,proto3" json:"post_subject,omitempty"`
	Draft         string               `protobuf:"bytes,7,opt,name=draft,proto3" json:"draft,omitempty"`
	PostBody      string               `protobuf:"bytes,8,opt,name=post_body,json=postBody,proto3" json:"post_body,omitempty"`
	Comments      []*Comment           `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
	Tags          []*Tag               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{5}
}

func (x *Post) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *Post) GetPostBlogId() uint32 {
	if x != nil {
		return x.PostBlogId
	}
	return 0
}

func (x *Post) GetPostAuthorId() uint32 {
	if x != nil {
		return x.PostAuthorId
	}
	return 0
}

func (x *Post) GetPostCreatedOn() *timestamp.Timestamp {
	if x != nil {
		return x.PostCreatedOn
	}
	return nil
}

func (x *Post) GetPostSection() Section {
	if x != nil {
		return x.PostSection
	}
	return Section_cooking
}

func (x *Post) GetPostSubject() string {
	if x != nil {
		return x.PostSubject
	}
	return ""
}

func (x *Post) GetDraft() string {
	if x != nil {
		return x.Draft
	}
	return ""
}

func (x *Post) GetPostBody() string {
	if x != nil {
		return x.PostBody
	}
	return ""
}

func (x *Post) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Post) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId     uint32 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CommentPostId uint32 `protobuf:"varint,2,opt,name=comment_post_id,json=commentPostId,proto3" json:"comment_post_id,omitempty"`
	CommentName   string `protobuf:"bytes,3,opt,name=comment_name,json=commentName,proto3" json:"comment_name,omitempty"`
	CommentText   string `protobuf:"bytes,4,opt,name=comment_text,json=commentText,proto3" json:"comment_text,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{6}
}

func (x *Comment) GetCommentId() uint32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *Comment) GetCommentPostId() uint32 {
	if x != nil {
		return x.CommentPostId
	}
	return 0
}

func (x *Comment) GetCommentName() string {
	if x != nil {
		return x.CommentName
	}
	return ""
}

func (x *Comment) GetCommentText() string {
	if x != nil {
		return x.CommentText
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   uint32 `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagName string `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{7}
}

func (x *Tag) GetTagId() uint32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *Tag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type InsertAuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username         string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password         string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email            string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Bio              string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
	FavouriteSection string `protobuf:"bytes,6,opt,name=favourite_section,json=favouriteSection,proto3" json:"favourite_section,omitempty"`
}

func (x *InsertAuthorRequest) Reset() {
	*x = InsertAuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertAuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertAuthorRequest) ProtoMessage() {}

func (x *InsertAuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertAuthorRequest.ProtoReflect.Descriptor instead.
func (*InsertAuthorRequest) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{8}
}

func (x *InsertAuthorRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertAuthorRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *InsertAuthorRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *InsertAuthorRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *InsertAuthorRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *InsertAuthorRequest) GetFavouriteSection() string {
	if x != nil {
		return x.FavouriteSection
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_examples_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_examples_query_proto_rawDescGZIP(), []int{9}
}

var File_examples_query_proto protoreflect.FileDescriptor

var file_examples_query_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x0e, 0x42, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0c, 0x42, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a,
	0x14, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x86, 0x02,
	0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x62, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x42, 0x69, 0x6f, 0x12, 0x4b, 0x0a, 0x18, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x03, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x42, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x6e, 0x12, 0x34, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x72,
	0x61, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0x37, 0x0a, 0x03, 0x54,
	0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x2b, 0x0a, 0x11,
	0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x61, 0x76, 0x6f, 0x75, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x47, 0x0a, 0x07, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x77, 0x6f, 0x6f, 0x64, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x73, 0x6e, 0x6f, 0x77, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x10, 0x03, 0x32, 0xba, 0x02, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x67, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x42, 0x6c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x42, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x12,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x67, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x13, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x67, 0x73, 0x12, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x67, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x32, 0x59, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x48, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x63, 0x6b, 0x73, 0x6b,
	0x6a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6d, 0x61, 0x70,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x3b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_examples_query_proto_rawDescOnce sync.Once
	file_examples_query_proto_rawDescData = file_examples_query_proto_rawDesc
)

func file_examples_query_proto_rawDescGZIP() []byte {
	file_examples_query_proto_rawDescOnce.Do(func() {
		file_examples_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_examples_query_proto_rawDescData)
	})
	return file_examples_query_proto_rawDescData
}

var file_examples_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_examples_query_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_examples_query_proto_goTypes = []interface{}{
	(Section)(0),                 // 0: examples.Section
	(*BlogRequest)(nil),          // 1: examples.BlogRequest
	(*BlogIdsRequest)(nil),       // 2: examples.BlogIdsRequest
	(*BlogResponse)(nil),         // 3: examples.BlogResponse
	(*DetailedBlogResponse)(nil), // 4: examples.DetailedBlogResponse
	(*Author)(nil),               // 5: examples.Author
	(*Post)(nil),                 // 6: examples.Post
	(*Comment)(nil),              // 7: examples.Comment
	(*Tag)(nil),                  // 8: examples.Tag
	(*InsertAuthorRequest)(nil),  // 9: examples.InsertAuthorRequest
	(*EmptyResponse)(nil),        // 10: examples.EmptyResponse
	(*timestamp.Timestamp)(nil),  // 11: google.protobuf.Timestamp
}
var file_examples_query_proto_depIdxs = []int32{
	5,  // 0: examples.DetailedBlogResponse.author:type_name -> examples.Author
	6,  // 1: examples.DetailedBlogResponse.posts:type_name -> examples.Post
	0,  // 2: examples.Author.author_favourite_section:type_name -> examples.Section
	11, // 3: examples.Post.post_created_on:type_name -> google.protobuf.Timestamp
	0,  // 4: examples.Post.post_section:type_name -> examples.Section
	7,  // 5: examples.Post.comments:type_name -> examples.Comment
	8,  // 6: examples.Post.tags:type_name -> examples.Tag
	1,  // 7: examples.BlogQueryService.SelectBlog:input_type -> examples.BlogRequest
	2,  // 8: examples.BlogQueryService.SelectBlogs:input_type -> examples.BlogIdsRequest
	1,  // 9: examples.BlogQueryService.SelectDetailedBlog:input_type -> examples.BlogRequest
	2,  // 10: examples.BlogQueryService.SelectDetailedBlogs:input_type -> examples.BlogIdsRequest
	9,  // 11: examples.InsertService.InsertAuthor:input_type -> examples.InsertAuthorRequest
	3,  // 12: examples.BlogQueryService.SelectBlog:output_type -> examples.BlogResponse
	3,  // 13: examples.BlogQueryService.SelectBlogs:output_type -> examples.BlogResponse
	4,  // 14: examples.BlogQueryService.SelectDetailedBlog:output_type -> examples.DetailedBlogResponse
	4,  // 15: examples.BlogQueryService.SelectDetailedBlogs:output_type -> examples.DetailedBlogResponse
	10, // 16: examples.InsertService.InsertAuthor:output_type -> examples.EmptyResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_examples_query_proto_init() }
func file_examples_query_proto_init() {
	if File_examples_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_examples_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailedBlogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertAuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_examples_query_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_examples_query_proto_goTypes,
		DependencyIndexes: file_examples_query_proto_depIdxs,
		EnumInfos:         file_examples_query_proto_enumTypes,
		MessageInfos:      file_examples_query_proto_msgTypes,
	}.Build()
	File_examples_query_proto = out.File
	file_examples_query_proto_rawDesc = nil
	file_examples_query_proto_goTypes = nil
	file_examples_query_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BlogQueryServiceClient is the client API for BlogQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogQueryServiceClient interface {
	SelectBlog(ctx context.Context, in *BlogRequest, opts ...grpc.CallOption) (*BlogResponse, error)
	SelectBlogs(ctx context.Context, in *BlogIdsRequest, opts ...grpc.CallOption) (BlogQueryService_SelectBlogsClient, error)
	SelectDetailedBlog(ctx context.Context, in *BlogRequest, opts ...grpc.CallOption) (*DetailedBlogResponse, error)
	SelectDetailedBlogs(ctx context.Context, in *BlogIdsRequest, opts ...grpc.CallOption) (BlogQueryService_SelectDetailedBlogsClient, error)
}

type blogQueryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogQueryServiceClient(cc grpc.ClientConnInterface) BlogQueryServiceClient {
	return &blogQueryServiceClient{cc}
}

func (c *blogQueryServiceClient) SelectBlog(ctx context.Context, in *BlogRequest, opts ...grpc.CallOption) (*BlogResponse, error) {
	out := new(BlogResponse)
	err := c.cc.Invoke(ctx, "/examples.BlogQueryService/SelectBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogQueryServiceClient) SelectBlogs(ctx context.Context, in *BlogIdsRequest, opts ...grpc.CallOption) (BlogQueryService_SelectBlogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BlogQueryService_serviceDesc.Streams[0], "/examples.BlogQueryService/SelectBlogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &blogQueryServiceSelectBlogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BlogQueryService_SelectBlogsClient interface {
	Recv() (*BlogResponse, error)
	grpc.ClientStream
}

type blogQueryServiceSelectBlogsClient struct {
	grpc.ClientStream
}

func (x *blogQueryServiceSelectBlogsClient) Recv() (*BlogResponse, error) {
	m := new(BlogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blogQueryServiceClient) SelectDetailedBlog(ctx context.Context, in *BlogRequest, opts ...grpc.CallOption) (*DetailedBlogResponse, error) {
	out := new(DetailedBlogResponse)
	err := c.cc.Invoke(ctx, "/examples.BlogQueryService/SelectDetailedBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogQueryServiceClient) SelectDetailedBlogs(ctx context.Context, in *BlogIdsRequest, opts ...grpc.CallOption) (BlogQueryService_SelectDetailedBlogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BlogQueryService_serviceDesc.Streams[1], "/examples.BlogQueryService/SelectDetailedBlogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &blogQueryServiceSelectDetailedBlogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BlogQueryService_SelectDetailedBlogsClient interface {
	Recv() (*DetailedBlogResponse, error)
	grpc.ClientStream
}

type blogQueryServiceSelectDetailedBlogsClient struct {
	grpc.ClientStream
}

func (x *blogQueryServiceSelectDetailedBlogsClient) Recv() (*DetailedBlogResponse, error) {
	m := new(DetailedBlogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BlogQueryServiceServer is the server API for BlogQueryService service.
type BlogQueryServiceServer interface {
	SelectBlog(context.Context, *BlogRequest) (*BlogResponse, error)
	SelectBlogs(*BlogIdsRequest, BlogQueryService_SelectBlogsServer) error
	SelectDetailedBlog(context.Context, *BlogRequest) (*DetailedBlogResponse, error)
	SelectDetailedBlogs(*BlogIdsRequest, BlogQueryService_SelectDetailedBlogsServer) error
}

// UnimplementedBlogQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBlogQueryServiceServer struct {
}

func (*UnimplementedBlogQueryServiceServer) SelectBlog(context.Context, *BlogRequest) (*BlogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectBlog not implemented")
}
func (*UnimplementedBlogQueryServiceServer) SelectBlogs(*BlogIdsRequest, BlogQueryService_SelectBlogsServer) error {
	return status.Errorf(codes.Unimplemented, "method SelectBlogs not implemented")
}
func (*UnimplementedBlogQueryServiceServer) SelectDetailedBlog(context.Context, *BlogRequest) (*DetailedBlogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectDetailedBlog not implemented")
}
func (*UnimplementedBlogQueryServiceServer) SelectDetailedBlogs(*BlogIdsRequest, BlogQueryService_SelectDetailedBlogsServer) error {
	return status.Errorf(codes.Unimplemented, "method SelectDetailedBlogs not implemented")
}

func RegisterBlogQueryServiceServer(s *grpc.Server, srv BlogQueryServiceServer) {
	s.RegisterService(&_BlogQueryService_serviceDesc, srv)
}

func _BlogQueryService_SelectBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogQueryServiceServer).SelectBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.BlogQueryService/SelectBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogQueryServiceServer).SelectBlog(ctx, req.(*BlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogQueryService_SelectBlogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlogIdsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlogQueryServiceServer).SelectBlogs(m, &blogQueryServiceSelectBlogsServer{stream})
}

type BlogQueryService_SelectBlogsServer interface {
	Send(*BlogResponse) error
	grpc.ServerStream
}

type blogQueryServiceSelectBlogsServer struct {
	grpc.ServerStream
}

func (x *blogQueryServiceSelectBlogsServer) Send(m *BlogResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BlogQueryService_SelectDetailedBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogQueryServiceServer).SelectDetailedBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.BlogQueryService/SelectDetailedBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogQueryServiceServer).SelectDetailedBlog(ctx, req.(*BlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogQueryService_SelectDetailedBlogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlogIdsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlogQueryServiceServer).SelectDetailedBlogs(m, &blogQueryServiceSelectDetailedBlogsServer{stream})
}

type BlogQueryService_SelectDetailedBlogsServer interface {
	Send(*DetailedBlogResponse) error
	grpc.ServerStream
}

type blogQueryServiceSelectDetailedBlogsServer struct {
	grpc.ServerStream
}

func (x *blogQueryServiceSelectDetailedBlogsServer) Send(m *DetailedBlogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BlogQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examples.BlogQueryService",
	HandlerType: (*BlogQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SelectBlog",
			Handler:    _BlogQueryService_SelectBlog_Handler,
		},
		{
			MethodName: "SelectDetailedBlog",
			Handler:    _BlogQueryService_SelectDetailedBlog_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SelectBlogs",
			Handler:       _BlogQueryService_SelectBlogs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SelectDetailedBlogs",
			Handler:       _BlogQueryService_SelectDetailedBlogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "examples/query.proto",
}

// InsertServiceClient is the client API for InsertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InsertServiceClient interface {
	InsertAuthor(ctx context.Context, in *InsertAuthorRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type insertServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInsertServiceClient(cc grpc.ClientConnInterface) InsertServiceClient {
	return &insertServiceClient{cc}
}

func (c *insertServiceClient) InsertAuthor(ctx context.Context, in *InsertAuthorRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/examples.InsertService/InsertAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InsertServiceServer is the server API for InsertService service.
type InsertServiceServer interface {
	InsertAuthor(context.Context, *InsertAuthorRequest) (*EmptyResponse, error)
}

// UnimplementedInsertServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInsertServiceServer struct {
}

func (*UnimplementedInsertServiceServer) InsertAuthor(context.Context, *InsertAuthorRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertAuthor not implemented")
}

func RegisterInsertServiceServer(s *grpc.Server, srv InsertServiceServer) {
	s.RegisterService(&_InsertService_serviceDesc, srv)
}

func _InsertService_InsertAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertAuthorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InsertServiceServer).InsertAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.InsertService/InsertAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InsertServiceServer).InsertAuthor(ctx, req.(*InsertAuthorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InsertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examples.InsertService",
	HandlerType: (*InsertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertAuthor",
			Handler:    _InsertService_InsertAuthor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "examples/query.proto",
}
